sum(my.negatives[1,])
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negatives<-matrix(rep(0,16),nrow=4)
for(i in 1:100){
my.negatives<-my.negatives+my.list[[i]]
}
my.negatives
sum(my.negatives[1,])
sum(1,2)
summ(my.negatives[1,],my.negatives[2,],my.negatives[3,],my.negatives[4,])
sum(my.negatives[1,],my.negatives[2,],my.negatives[3,],my.negatives[4,])
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negative.values<-numeric(0)
for(i in 1:100){
my.negative.values<-c(my.negative.values,my.data[i][my.index[i]])
}
my.negative.values
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negative.values<-numeric(0)
for(i in 1:100){
my.negative.values<-c(my.negative.values,my.data[i][my.list[i]])
}
my.negative.values
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negative.values<-numeric(0)
for(i in 1:100){
my.negative.values<-c(my.negative.values,my.data[[i]][my.index[i]])
}
my.negative.values
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negative.values<-numeric(0)
for(i in 1:100){
my.negative.values<-c(my.negative.values,my.data[[i]][my.list[i]])
}
my.negative.values
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negative.values<-numeric(0)
for(i in 1:100){
my.negative.values<-c(my.negative.values,my.data[i][my.list[[i]]])
}
my.negative.values
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negative.values<-numeric(0)
for(i in 1:100){
my.negative.values<-c(my.negative.values,my.data[[i]][my.index[[i]]])
}
my.negative.values
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negative.values<-numeric(0)
for(i in 1:100){
my.negative.values<-c(my.negative.values,my.data[[i]][my.list[[i]]])
}
my.negative.values
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negative.values<-numeric(0)
for(i in 1:100){
my.negative.values<-c(my.negative.values,my.data[[i]][my.list[[i]]])
}
my.negative.values
summary(my.negative.values)
packages??
1+1
read.table?
exit
?read.table()
getwd()
read.table("/Users/TheSauravKharb/Documents/INTRO TO R/ok.txt, header = TRUE)
read.table("/Users/TheSauravKharb/Documents/INTRO TO R/ok.txt, header = TRUE)
my.dat <- read.table("/Users/TheSauravKharb/Documents/INTRO TO R/ok.txt, header = TRUE)
my.dat
exit
skn
?
..
exit
quit
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negative.values<-numeric(0)
for(i in 1:100){
my.negative.values<-c(my.negative.values,my.data[[i]][my.list[[i]]])
}
my.negative.values
summary(my.negative.values)
1+2
quit
~
~/
hello
my.data
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negative.values<-numeric(0)
for(i in 1:100){
my.negative.values<-c(my.negative.values,my.data[[i]][my.list[[i]]])
}
my.negative.values
summary(my.negative.values)
set.seed(9852)
m <- matrix(rnorm(16),nrow=4)
my.data<-list()
for(i in 1:100){
my.data[[i]]<-matrix(rnorm(16),nrow=4)
}
my.list<-list()
for(i in 1:100){
my.list[[i]]<-(my.data[[i]]<0)
}
my.negative.values<-numeric(0)
for(i in 1:100){
my.negative.values<-c(my.negative.values,my.data[[i]][my.list[[i]]])
}
my.negative.values
summary(my.negative.values)
exit
iris <- data(iris)
iris
?iris
iris <- data(Iris)
iris <- data(Titanic)
View(iris)
data(Titanic)
View(data(Titanic))
iris3
Titanic
iris3
data("iris")
lol <- data("iris")
lol
lol <- data("iris3")
lol
iris
data <- (iris)
data("iris")
data(iris)
View(iris)
datadata(iris)
data <- data(iris)
library(dplyr)
species <- "setosa"
one.species <- filter(iris, 5 == species)
one.species <- filter(iris, Species == species)
View(one.species)
View(one.species)
max.species <- summarise(one.species, max.sepal.width = max(Sepal.Width))
View(max.species)
View(max.species)
= max(Sepaal.Length) )
max.species <- summarise(one.species, max.sepal.width = max(Sepal.Width), max.sepal.length
= max(Sepaal.Length) )
max.species <- summarise(one.species, max.sepal.width = max(Sepal.Width), max.sepal.length
= max(Sepal.Length) )
View(max.species)
View(max.species)
max.species <- summarise(one.species, MaxSepalWidth = max(Sepal.Width), MaxSepalLength
= max(Sepal.Length), MaxPetalLength = max(Petal.Length), MaxPetalWidth = max(Petal.Width) )
View(max.species)
View(max.species)
average.species <- summarise(one.species, AverageSepalWidth = mean(Sepal.Width), AverageSepalLength
= mean(Sepal.Length), AveragePetalLength = mean(Petal.Length), AveragePetalWidth = mean(Petal.Width) )
View(average.species)
View(average.species)
min.species <- summarise(one.species, MinSepalWidth = min(Sepal.Width), MinSepalLength
= min(Sepal.Length), MinPetalLength = min(Petal.Length), MinPetalWidth = min(Petal.Width) )
View(min.species)
View(min.species)
summary(iris)
is.data.frame(one.species)
shiny::runApp('Documents/Courses/School/Info201/a8-data-app-sauravkh')
library(shiny)
my.server <- function(input, output) {
#pecies <- "setosa"
# one.species <- filter(iris, Species == species)
#output$table <- renderDataTable(iris)
# output$hello <- renderText({return("Hello")})
}
shinyServer(my.server)
library(shiny)
my.ui <- fluidPage(
sidebarLayout(
sidebarPanel(  # specify content for the "sidebar" column
p("sidebar panel content goes here"), width = 4
),
mainPanel( tableOutput(table),
tabsetPanel(
tabPanel("Plot"),
tabPanel("Summary"),
tabPanel("Table")
),
#textOutput('hello')
#,
p("main panel content goes here"), width = 8
), position = "right"
)
)
shinyUI(my.ui)
library(shiny)
my.ui <- fluidPage(
sidebarLayout(
sidebarPanel(  # specify content for the "sidebar" column
p("sidebar panel content goes here"), width = 4
),
mainPanel( tableOutput(table),
tabsetPanel(
tabPanel("Plot"),
tabPanel("Summary"),
tabPanel("Table")
),
#textOutput('hello')
#,
p("main panel content goes here"), width = 8
), position = "right"
)
)
shinyUI(my.ui)
library("shiny")
my.server <- function(input, output) {
#pecies <- "setosa"
# one.species <- filter(iris, Species == species)
#output$table <- renderDataTable(iris)
# output$hello <- renderText({return("Hello")})
}
shinyServer(my.server)
library("shiny")
my.ui <- fluidPage(
sidebarLayout(
sidebarPanel(  # specify content for the "sidebar" column
p("sidebar panel content goes here"), width = 4
),
mainPanel( tableOutput(table),
tabsetPanel(
tabPanel("Plot"),
tabPanel("Summary"),
tabPanel("Table")
),
#textOutput('hello')
#,
p("main panel content goes here"), width = 8
), position = "right"
)
)
shinyUI(my.ui)
library("shiny")
my.ui <- fluidPage(
sidebarLayout(
sidebarPanel(  # specify content for the "sidebar" column
p("sidebar panel content goes here"), width = 4
),
mainPanel(
tabsetPanel(
tabPanel("Plot"),
tabPanel("Summary"),
tabPanel("Table")
),
#textOutput('hello')
#,
p("main panel content goes here"), width = 8
), position = "right"
)
)
shinyUI(my.ui)
library("shiny")
my.server <- function(input, output) {
#pecies <- "setosa"
# one.species <- filter(iris, Species == species)
#output$table <- renderDataTable(iris)
# output$hello <- renderText({return("Hello")})
}
shinyServer(my.server)
library(twitteR)
consumer_key <- "j1cbBqw42lPoaZRSx3dj9KfTE"
consumer_secret <- "M1lnF1FVzcRy3fhpkw2LvIhkpp2JhILBzgjGHkTxTiaVJlwQoL"
access_token <- "835019765508788224-QAvxxTsImlQKLXDBZcRtfbMlFDxM7pM"
access_secret <- "6LaX7rgIMde1H55B3huYT3unThbqdaf420WPNaINlxqRe"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tweets <- searchTwitter("210462857140252672")
library(twitteR)
consumer_key <- "aoQ1bAoMZ74pY5RsYcbKJzBUc"
consumer_secret <- "spidig71mvpnQbGOWOuBvQC8vq9wP8ax4eeV9FzjlypeHjenM9"
access_token <- "835019765508788224-WpZ2IPJgu1PKcA6w7rP628DPFystHsD"
access_secret <- "0JDPxoIQvcukZ8rqoFIDDssrxRkglWvCwdG2dtWT7D1Fu"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
?showStatus
please.run <- showStatus("440791078799548418")
please.run
?`status-class`
please.run <- showStatus("440791078799548418")
please.run
please.run <- showStatus("440791078799548418")
please.run
tweets <- searchTwitter("210462857140252672")
tweets
tweets.df <- twListToDF(tweets)
tweets <- searchTwitter("440791078799548418")
tweets.df <- twListToDF(tweets)
please.run <- showStatus("440791078799548418")
please.run
please.run <- showStatus("440560487919386625")
please.run
please.run <- showStatus("439325120666951680")
please.run
tweets <- searchTwitter("Wadia_RosJan: @samsung galaxy exprience zone ;)")
tweets
tweets[1]
tweets <- searchTwitter("jack")
tweets
please.run <- showStatus("439325120666951680")
please.run
tweets <- searchTwitter("Oye_Saqa_HD")
tweets
response <- GET("https://api.twitter.com/1.1/statuses/lookup.json?id=210462857140252672")
library("httr")
response <- GET("https://api.twitter.com/1.1/statuses/lookup.json?id=210462857140252672")
response
content(response)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tweets <- searchTwitter("Oye_Saqa_HD")
tweets
tweets <- searchTwitter("439325120666951680")
please.run <- showStatus("439325120666951680")
please.run
tweets <- searchTwitter("Oye_Saqa_HD: Los disidentes intelectuales del 68: Paz y Krauze http://t.co/CSBOmzsMOF")
tweets <- searchTwitter("$Oye_Saqa_HD: Los disidentes intelectuales del 68: Paz y Krauze http://t.co/CSBOmzsMOF")
please.run <- showStatus("439325120666951680")
please.run
getwd)
getwd()
setwd("/Users/TheSauravKharb/Desktop/crunchbase_2013_snapshot_20131212 2/")
library("jsonlite")
?write.csv
setwd("/Users/TheSauravKharb/Desktop")
setwd("/Users/TheSauravKharb/Desktop/cse ass 7/crunchbase_2013inCSV/")
setwd("/Users/TheSauravKharb/Documents/Courses/School/Info201/finalProject/")
cb_degree <- read.csv("cb_degree.csv", quote = "", stringsAsFactors = FALSE)
cb_degree <- read.csv("cb_degrees.csv", quote = "", stringsAsFactors = FALSE)
getwd()
setwd(""/Users/TheSauravKharb/Documents/Courses/School/Info201/finalProject/data")
setwd("/Users/TheSauravKharb/Documents/Courses/School/Info201/finalProject/data")
setwd("/Users/TheSauravKharb/Documents/Courses/School/Info201/finalProject/data/crunchbase_2013inCSV/")
cb_degree <- read.csv("cb_degrees.csv", quote = "", stringsAsFactors = FALSE)
cb_degree <- read.csv("cb_degrees.csv", quote = "", stringsAsFactors = FALSE)
cb_degree <- read.csv("cb_degrees.csv", quote = "", stringsAsFactors = FALSE)
cb_degree <- read.csv("cb_degrees.csv", quote = "", stringsAsFactors = FALSE)
cb_relationships <- read.csv("cb_relationships.csv", quote = "", stringsAsFactors = FALSE)
View(cb_relationships)
View(cb_relationships)
cb_officess <- read.csv("cb_offices.csv", quote = "", stringsAsFactors = FALSE)
View(cb_officess)
View(cb_officess)
cb_offices <- read.csv("cb_offices.csv", quote = "", stringsAsFactors = FALSE)
View(cb_officess)
View(cb_officess)
cb_ipos <- read.csv("cb_ipos.csv", quote = "", stringsAsFactors = FALSE)
View(cb_ipos)
View(cb_ipos)
ipo <- filter(cb_ipos, 4 != "NULL")
ipo <- filter(cb_ipos, X.valuation_amount != "NULL")
ipo <- filter(cb_ipos, X.valuation_amount. != "NULL")
library("dplyr")
ipo <- filter(cb_ipos, X.valuation_amount. != "NULL")
View(ipo)
View(ipo)
ipo <- filter(cb_ipos, X.valuation_amount. != "NULL") %>%
select(3)
View(ipo)
View(ipo)
cb_funding.rounds <- read.csv("cb_funding_rounds.csv", quote = "", stringsAsFactors = FALSE)
View(cb_funding.rounds)
View(cb_funding.rounds)
cb_funding.rounds <- read.csv("cb_funding_rounds.csv", quote = "", stringsAsFactors = FALSE)
View(cb_funding.rounds)
View(cb_funding.rounds)
funding.rounds <- filter(cb_funding.rounds, X.funding_round_type. == "'series-c+'")
View(funding.rounds)
View(funding.rounds)
View(funding.rounds)
funding.rounds.c <- filter(cb_funding.rounds, X.funding_round_type. == "'series-c+'")
ipo.companies <- filter(cb_ipos, X.valuation_amount. != "NULL") %>%
select(3)
funding.rounds.c <- filter(cb_funding.rounds, X.funding_round_type. == "'series-c+'") %>%
select(3)
View(funding.rounds.c)
View(funding.rounds.c)
?filter
?filter
c.funding.without.ipo <- filter(funding.rounds.c, X.object_id %in% ipo.companies)
c.funding.without.ipo <- filter(funding.rounds.c, 1 %in% ipo.companies)
View(c.funding.without.ipo)
View(c.funding.without.ipo)
c.funding.without.ipo <- filter(funding.rounds.c, 1 %in% 'c:31')
View(c.funding.without.ipo)
View(c.funding.without.ipo)
c.funding.without.ipo <- filter(funding.rounds.c, 1 =='c:31')
View(c.funding.without.ipo)
View(c.funding.without.ipo)
c.funding.without.ipo <- filter(funding.rounds.c,  x.object_id. %in% ipo.companies)
c.funding.without.ipo <- filter(funding.rounds.c,  X.object_id. %in% ipo.companies)
View(c.funding.without.ipo)
View(c.funding.without.ipo)
c.funding.with.ipo <- filter(funding.rounds.c,  X.object_id. %in% ipo)
ipo.companies <- filter(cb_ipos, X.valuation_amount. != "NULL") %>%
select(3)
View(ipo.companies)
View(ipo.companies)
View(cb_ipos)
View(cb_ipos)
c.funding.with.ipo <- filter(funding.rounds.c,  X.object_id. %in% cb_ipos$X.object_id.)
View(c.funding.with.ipo)
View(c.funding.with.ipo)
?filter
c.funding.with.ipo <- X.object_id. %in% cb_ipos$X.object_id.
c.funding.with.ipo <- funding.rounds.c$X.object_id. %in% cb_ipos$X.object_id.
c.funding.with.ipo
c.funding.with.ipo <- !funding.rounds.c$X.object_id. %in% cb_ipos$X.object_id.
funding.rounds.c <- funding.rounds.c[c.funding.with.ipo,]
